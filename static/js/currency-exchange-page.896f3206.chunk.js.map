{"version":3,"file":"static/js/currency-exchange-page.896f3206.chunk.js","mappings":"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","sources":["components/CurrencyExchange/CurrencyExchange.styled.jsx","components/CurrencyExchange/CurrencyExchange.jsx","pages/CurrencyExchangePage.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Input = styled.input`\r\n  width: 200px;\r\n  border: 0;\r\n  border-radius: 10px;\r\n  padding: 15px;\r\n  color: #2c0d01;\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n`;\r\n\r\nexport const Select = styled.select`\r\n  width: 100px;\r\n  border: 0;\r\n  border-radius: 12px;\r\n  padding: 12px;\r\n  margin-left: 10px;\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { nanoid } from 'nanoid';\r\nimport { Input, Select } from './CurrencyExchange.styled';\r\n\r\nfunction CurrencyExchange(props) {\r\n  const {\r\n    currencyOptions,\r\n    selectedCurrency,\r\n    onChangeCurrency,\r\n    amount,\r\n    onChangeAmount,\r\n  } = props;\r\n\r\n  return (\r\n    <div>\r\n      {amount && (\r\n        <Input type=\"number\" value={amount} onChange={onChangeAmount} />\r\n      )}\r\n      <Select value={selectedCurrency} onChange={onChangeCurrency}>\r\n        {currencyOptions.map(option => (\r\n          <option key={nanoid()} value={option}>\r\n            {option}\r\n          </option>\r\n        ))}\r\n      </Select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CurrencyExchange;\r\n\r\nCurrencyExchange.propTypes = {\r\n  currencyOptions: PropTypes.array.isRequired,\r\n  selectedCurrency: PropTypes.string,\r\n  onChangeCurrency: PropTypes.func.isRequired,\r\n  amount: PropTypes.node.isRequired,\r\n  onChangeAmount: PropTypes.func.isRequired,\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport CurrencyExchange from '../components/CurrencyExchange';\r\nimport Loader from '../components/Loader';\r\nimport { apiAllCurrency, apiCurrencyFromTo } from '../services/api';\r\n\r\nfunction CurrencyExchangePage() {\r\n  const [currencyOptions, setCurrencyOptions] = useState([]);\r\n  const [fromCurrency, setFromCurrency] = useState();\r\n  const [toCurrency, setToCurrency] = useState('UAH');\r\n  const [amount, setAmount] = useState(1);\r\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true);\r\n  const [exchangeRate, setExchangeRate] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  let fromAmount, toAmount;\r\n  if (amountInFromCurrency) {\r\n    fromAmount = amount;\r\n    toAmount = amount;\r\n    toAmount = amount * exchangeRate;\r\n  } else {\r\n    toAmount = amount;\r\n    fromAmount = amount / exchangeRate;\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchApiAllCurrency = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const { results, base } = await apiAllCurrency();\r\n        const firstCurrency = Object.keys(results)[0];\r\n        setCurrencyOptions([base, ...Object.keys(results)]);\r\n        setFromCurrency(base);\r\n        setToCurrency(toCurrency);\r\n        setExchangeRate(results[firstCurrency]);\r\n      } catch {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchApiAllCurrency();\r\n  }, [toCurrency, error]);\r\n\r\n  useEffect(() => {\r\n    const fetchApiCurrencyFromTo = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const { results } = await apiCurrencyFromTo(fromCurrency, toCurrency);\r\n        setExchangeRate(results[toCurrency]);\r\n      } catch {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    if (fromCurrency != null && toCurrency != null) {\r\n      fetchApiCurrencyFromTo();\r\n    }\r\n  }, [toCurrency, fromCurrency, error]);\r\n\r\n  const handleFromChangeAmount = e => {\r\n    setAmount(e.target.value);\r\n    setAmountInFromCurrency(true);\r\n  };\r\n\r\n  const handleToChangeAmount = e => {\r\n    setAmount(e.target.value);\r\n    setAmountInFromCurrency(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        data-aos=\"flip-left\"\r\n        data-aos-easing=\"linear\"\r\n        data-aos-duration=\"2000\"\r\n      >\r\n        <h2 className=\"title\">Convert</h2>\r\n        <CurrencyExchange\r\n          currencyOptions={currencyOptions}\r\n          selectedCurrency={fromCurrency}\r\n          onChangeCurrency={e => setFromCurrency(e.target.value)}\r\n          amount={fromAmount}\r\n          onChangeAmount={handleFromChangeAmount}\r\n        />\r\n        <div className=\"total\">=</div>\r\n        <CurrencyExchange\r\n          currencyOptions={currencyOptions}\r\n          selectedCurrency={toCurrency}\r\n          onChangeCurrency={e => setToCurrency(e.target.value)}\r\n          amount={toAmount}\r\n          onChangeAmount={handleToChangeAmount}\r\n        />\r\n      </div>\r\n      {error && toast.error(error.message)}\r\n      {loading && <Loader />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CurrencyExchangePage;\r\n","import Axios from 'axios';\r\n\r\nconst API_KEY = 'ede3c756f1-46547e15bb-rc3422';\r\nconst BASE_URL = 'https://api.fastforex.io';\r\n\r\nexport const apiAllCurrency = async () => {\r\n  const response = await Axios.get(`${BASE_URL}/fetch-all?api_key=${API_KEY}`);\r\n  return response.data;\r\n};\r\n\r\nexport const apiCurrencyFromTo = async (fromCurrency, toCurrency) => {\r\n  const response = await Axios.get(\r\n    `${BASE_URL}/fetch-all?api_key=${API_KEY}&from=${fromCurrency}&to=${toCurrency}`,\r\n  );\r\n  return response.data;\r\n};\r\n"],"names":["Input","styled","Select","props","currencyOptions","selectedCurrency","onChangeCurrency","amount","onChangeAmount","type","value","onChange","map","option","nanoid","fromAmount","toAmount","useState","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","setAmount","amountInFromCurrency","setAmountInFromCurrency","exchangeRate","setExchangeRate","loading","setLoading","error","setError","useEffect","fetchApiAllCurrency","apiAllCurrency","results","base","firstCurrency","Object","keys","message","fetchApiCurrencyFromTo","apiCurrencyFromTo","className","e","target","toast","Loader","API_KEY","BASE_URL","Axios","response","data"],"sourceRoot":""}